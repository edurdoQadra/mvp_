{
  "version": 3,
  "sources": ["../../datatables.net-select/js/dataTables.select.mjs"],
  "sourcesContent": ["/*! Select for DataTables 2.0.3\r\n * Â© SpryMedia Ltd - datatables.net/license/mit\r\n */\r\n\r\nimport jQuery from 'jquery';\r\nimport DataTable from 'datatables.net';\r\n\r\n// Allow reassignment of the $ variable\r\nlet $ = jQuery;\r\n\r\n\r\n// Version information for debugger\r\nDataTable.select = {};\r\n\r\nDataTable.select.classes = {\r\n\tcheckbox: 'dt-select-checkbox'\r\n};\r\n\r\nDataTable.select.version = '2.0.3';\r\n\r\nDataTable.select.init = function (dt) {\r\n\tvar ctx = dt.settings()[0];\r\n\r\n\tif (!DataTable.versionCheck('2')) {\r\n\t\tthrow 'Warning: Select requires DataTables 2 or newer';\r\n\t}\r\n\r\n\tif (ctx._select) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar savedSelected = dt.state.loaded();\r\n\r\n\tvar selectAndSave = function (e, settings, data) {\r\n\t\tif (data === null || data.select === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Clear any currently selected rows, before restoring state\r\n\t\t// None will be selected on first initialisation\r\n\t\tif (dt.rows({ selected: true }).any()) {\r\n\t\t\tdt.rows().deselect();\r\n\t\t}\r\n\t\tif (data.select.rows !== undefined) {\r\n\t\t\tdt.rows(data.select.rows).select();\r\n\t\t}\r\n\r\n\t\tif (dt.columns({ selected: true }).any()) {\r\n\t\t\tdt.columns().deselect();\r\n\t\t}\r\n\t\tif (data.select.columns !== undefined) {\r\n\t\t\tdt.columns(data.select.columns).select();\r\n\t\t}\r\n\r\n\t\tif (dt.cells({ selected: true }).any()) {\r\n\t\t\tdt.cells().deselect();\r\n\t\t}\r\n\t\tif (data.select.cells !== undefined) {\r\n\t\t\tfor (var i = 0; i < data.select.cells.length; i++) {\r\n\t\t\t\tdt.cell(data.select.cells[i].row, data.select.cells[i].column).select();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdt.state.save();\r\n\t};\r\n\r\n\tdt.on('stateSaveParams', function (e, settings, data) {\r\n\t\tdata.select = {};\r\n\t\tdata.select.rows = dt.rows({ selected: true }).ids(true).toArray();\r\n\t\tdata.select.columns = dt.columns({ selected: true })[0];\r\n\t\tdata.select.cells = dt.cells({ selected: true })[0].map(function (coords) {\r\n\t\t\treturn { row: dt.row(coords.row).id(true), column: coords.column };\r\n\t\t});\r\n\t})\r\n\t\t.on('stateLoadParams', selectAndSave)\r\n\t\t.one('init', function () {\r\n\t\t\tselectAndSave(undefined, undefined, savedSelected);\r\n\t\t});\r\n\r\n\tvar init = ctx.oInit.select;\r\n\tvar defaults = DataTable.defaults.select;\r\n\tvar opts = init === undefined ? defaults : init;\r\n\r\n\t// Set defaults\r\n\tvar items = 'row';\r\n\tvar style = 'api';\r\n\tvar blurable = false;\r\n\tvar toggleable = true;\r\n\tvar info = true;\r\n\tvar selector = 'td, th';\r\n\tvar className = 'selected';\r\n\tvar headerCheckbox = true;\r\n\tvar setStyle = false;\r\n\r\n\tctx._select = {\r\n\t\tinfoEls: []\r\n\t};\r\n\r\n\t// Initialisation customisations\r\n\tif (opts === true) {\r\n\t\tstyle = 'os';\r\n\t\tsetStyle = true;\r\n\t}\r\n\telse if (typeof opts === 'string') {\r\n\t\tstyle = opts;\r\n\t\tsetStyle = true;\r\n\t}\r\n\telse if ($.isPlainObject(opts)) {\r\n\t\tif (opts.blurable !== undefined) {\r\n\t\t\tblurable = opts.blurable;\r\n\t\t}\r\n\r\n\t\tif (opts.toggleable !== undefined) {\r\n\t\t\ttoggleable = opts.toggleable;\r\n\t\t}\r\n\r\n\t\tif (opts.info !== undefined) {\r\n\t\t\tinfo = opts.info;\r\n\t\t}\r\n\r\n\t\tif (opts.items !== undefined) {\r\n\t\t\titems = opts.items;\r\n\t\t}\r\n\r\n\t\tif (opts.style !== undefined) {\r\n\t\t\tstyle = opts.style;\r\n\t\t\tsetStyle = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstyle = 'os';\r\n\t\t\tsetStyle = true;\r\n\t\t}\r\n\r\n\t\tif (opts.selector !== undefined) {\r\n\t\t\tselector = opts.selector;\r\n\t\t}\r\n\r\n\t\tif (opts.className !== undefined) {\r\n\t\t\tclassName = opts.className;\r\n\t\t}\r\n\r\n\t\tif (opts.headerCheckbox !== undefined) {\r\n\t\t\theaderCheckbox = opts.headerCheckbox;\r\n\t\t}\r\n\t}\r\n\r\n\tdt.select.selector(selector);\r\n\tdt.select.items(items);\r\n\tdt.select.style(style);\r\n\tdt.select.blurable(blurable);\r\n\tdt.select.toggleable(toggleable);\r\n\tdt.select.info(info);\r\n\tctx._select.className = className;\r\n\r\n\t// If the init options haven't enabled select, but there is a selectable\r\n\t// class name, then enable\r\n\tif (!setStyle && $(dt.table().node()).hasClass('selectable')) {\r\n\t\tdt.select.style('os');\r\n\t}\r\n\r\n\t// Insert a checkbox into the header if needed - might need to wait\r\n\t// for init complete, or it might already be done\r\n\tif (headerCheckbox || headerCheckbox === 'select-page' || headerCheckbox === 'select-all') {\r\n\t\tinitCheckboxHeader(dt, headerCheckbox);\r\n\r\n\t\tdt.on('init', function () {\r\n\t\t\tinitCheckboxHeader(dt, headerCheckbox);\r\n\t\t});\r\n\t}\r\n};\r\n\r\n/*\r\n\r\nSelect is a collection of API methods, event handlers, event emitters and\r\nbuttons (for the `Buttons` extension) for DataTables. It provides the following\r\nfeatures, with an overview of how they are implemented:\r\n\r\n## Selection of rows, columns and cells. Whether an item is selected or not is\r\n   stored in:\r\n\r\n* rows: a `_select_selected` property which contains a boolean value of the\r\n  DataTables' `aoData` object for each row\r\n* columns: a `_select_selected` property which contains a boolean value of the\r\n  DataTables' `aoColumns` object for each column\r\n* cells: a `_selected_cells` property which contains an array of boolean values\r\n  of the `aoData` object for each row. The array is the same length as the\r\n  columns array, with each element of it representing a cell.\r\n\r\nThis method of using boolean flags allows Select to operate when nodes have not\r\nbeen created for rows / cells (DataTables' defer rendering feature).\r\n\r\n## API methods\r\n\r\nA range of API methods are available for triggering selection and de-selection\r\nof rows. Methods are also available to configure the selection events that can\r\nbe triggered by an end user (such as which items are to be selected). To a large\r\nextent, these of API methods *is* Select. It is basically a collection of helper\r\nfunctions that can be used to select items in a DataTable.\r\n\r\nConfiguration of select is held in the object `_select` which is attached to the\r\nDataTables settings object on initialisation. Select being available on a table\r\nis not optional when Select is loaded, but its default is for selection only to\r\nbe available via the API - so the end user wouldn't be able to select rows\r\nwithout additional configuration.\r\n\r\nThe `_select` object contains the following properties:\r\n\r\n```\r\n{\r\n\titems:string       - Can be `rows`, `columns` or `cells`. Defines what item \r\n\t                     will be selected if the user is allowed to activate row\r\n\t                     selection using the mouse.\r\n\tstyle:string       - Can be `none`, `single`, `multi` or `os`. Defines the\r\n\t                     interaction style when selecting items\r\n\tblurable:boolean   - If row selection can be cleared by clicking outside of\r\n\t                     the table\r\n\ttoggleable:boolean - If row selection can be cancelled by repeated clicking\r\n\t                     on the row\r\n\tinfo:boolean       - If the selection summary should be shown in the table\r\n\t                     information elements\r\n\tinfoEls:element[]  - List of HTML elements with info elements for a table\r\n}\r\n```\r\n\r\nIn addition to the API methods, Select also extends the DataTables selector\r\noptions for rows, columns and cells adding a `selected` option to the selector\r\noptions object, allowing the developer to select only selected items or\r\nunselected items.\r\n\r\n## Mouse selection of items\r\n\r\nClicking on items can be used to select items. This is done by a simple event\r\nhandler that will select the items using the API methods.\r\n\r\n */\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Local functions\r\n */\r\n\r\n/**\r\n * Add one or more cells to the selection when shift clicking in OS selection\r\n * style cell selection.\r\n *\r\n * Cell range is more complicated than row and column as we want to select\r\n * in the visible grid rather than by index in sequence. For example, if you\r\n * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1\r\n * should also be selected (and not 1-3, 1-4. etc)\r\n *\r\n * @param  {DataTable.Api} dt   DataTable\r\n * @param  {object}        idx  Cell index to select to\r\n * @param  {object}        last Cell index to select from\r\n * @private\r\n */\r\nfunction cellRange(dt, idx, last) {\r\n\tvar indexes;\r\n\tvar columnIndexes;\r\n\tvar rowIndexes;\r\n\tvar selectColumns = function (start, end) {\r\n\t\tif (start > end) {\r\n\t\t\tvar tmp = end;\r\n\t\t\tend = start;\r\n\t\t\tstart = tmp;\r\n\t\t}\r\n\r\n\t\tvar record = false;\r\n\t\treturn dt\r\n\t\t\t.columns(':visible')\r\n\t\t\t.indexes()\r\n\t\t\t.filter(function (i) {\r\n\t\t\t\tif (i === start) {\r\n\t\t\t\t\trecord = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i === end) {\r\n\t\t\t\t\t// not else if, as start might === end\r\n\t\t\t\t\trecord = false;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn record;\r\n\t\t\t});\r\n\t};\r\n\r\n\tvar selectRows = function (start, end) {\r\n\t\tvar indexes = dt.rows({ search: 'applied' }).indexes();\r\n\r\n\t\t// Which comes first - might need to swap\r\n\t\tif (indexes.indexOf(start) > indexes.indexOf(end)) {\r\n\t\t\tvar tmp = end;\r\n\t\t\tend = start;\r\n\t\t\tstart = tmp;\r\n\t\t}\r\n\r\n\t\tvar record = false;\r\n\t\treturn indexes.filter(function (i) {\r\n\t\t\tif (i === start) {\r\n\t\t\t\trecord = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (i === end) {\r\n\t\t\t\trecord = false;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn record;\r\n\t\t});\r\n\t};\r\n\r\n\tif (!dt.cells({ selected: true }).any() && !last) {\r\n\t\t// select from the top left cell to this one\r\n\t\tcolumnIndexes = selectColumns(0, idx.column);\r\n\t\trowIndexes = selectRows(0, idx.row);\r\n\t}\r\n\telse {\r\n\t\t// Get column indexes between old and new\r\n\t\tcolumnIndexes = selectColumns(last.column, idx.column);\r\n\t\trowIndexes = selectRows(last.row, idx.row);\r\n\t}\r\n\r\n\tindexes = dt.cells(rowIndexes, columnIndexes).flatten();\r\n\r\n\tif (!dt.cells(idx, { selected: true }).any()) {\r\n\t\t// Select range\r\n\t\tdt.cells(indexes).select();\r\n\t}\r\n\telse {\r\n\t\t// Deselect range\r\n\t\tdt.cells(indexes).deselect();\r\n\t}\r\n}\r\n\r\n/**\r\n * Get the class\r\n * @returns \r\n */\r\nfunction checkboxClass(selector) {\r\n\tvar name = DataTable.select.classes.checkbox;\r\n\r\n\treturn selector\r\n\t\t? name.replace(/ /g, '.')\r\n\t\t: name;\r\n}\r\n\r\n/**\r\n * Disable mouse selection by removing the selectors\r\n *\r\n * @param {DataTable.Api} dt DataTable to remove events from\r\n * @private\r\n */\r\nfunction disableMouseSelection(dt) {\r\n\tvar ctx = dt.settings()[0];\r\n\tvar selector = ctx._select.selector;\r\n\r\n\t$(dt.table().container())\r\n\t\t.off('mousedown.dtSelect', selector)\r\n\t\t.off('mouseup.dtSelect', selector)\r\n\t\t.off('click.dtSelect', selector);\r\n\r\n\t$('body').off('click.dtSelect' + _safeId(dt.table().node()));\r\n}\r\n\r\n/**\r\n * Attach mouse listeners to the table to allow mouse selection of items\r\n *\r\n * @param {DataTable.Api} dt DataTable to remove events from\r\n * @private\r\n */\r\nfunction enableMouseSelection(dt) {\r\n\tvar container = $(dt.table().container());\r\n\tvar ctx = dt.settings()[0];\r\n\tvar selector = ctx._select.selector;\r\n\tvar matchSelection;\r\n\r\n\tcontainer\r\n\t\t.on('mousedown.dtSelect', selector, function (e) {\r\n\t\t\t// Disallow text selection for shift clicking on the table so multi\r\n\t\t\t// element selection doesn't look terrible!\r\n\t\t\tif (e.shiftKey || e.metaKey || e.ctrlKey) {\r\n\t\t\t\tcontainer\r\n\t\t\t\t\t.css('-moz-user-select', 'none')\r\n\t\t\t\t\t.one('selectstart.dtSelect', selector, function () {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tmatchSelection = window.getSelection();\r\n\t\t\t}\r\n\t\t})\r\n\t\t.on('mouseup.dtSelect', selector, function () {\r\n\t\t\t// Allow text selection to occur again, Mozilla style (tested in FF\r\n\t\t\t// 35.0.1 - still required)\r\n\t\t\tcontainer.css('-moz-user-select', '');\r\n\t\t})\r\n\t\t.on('click.dtSelect', selector, function (e) {\r\n\t\t\tvar items = dt.select.items();\r\n\t\t\tvar idx;\r\n\r\n\t\t\t// If text was selected (click and drag), then we shouldn't change\r\n\t\t\t// the row's selected state\r\n\t\t\tif (matchSelection) {\r\n\t\t\t\tvar selection = window.getSelection();\r\n\r\n\t\t\t\t// If the element that contains the selection is not in the table, we can ignore it\r\n\t\t\t\t// This can happen if the developer selects text from the click event\r\n\t\t\t\tif (\r\n\t\t\t\t\t!selection.anchorNode ||\r\n\t\t\t\t\t$(selection.anchorNode).closest('table')[0] === dt.table().node()\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (selection !== matchSelection) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar ctx = dt.settings()[0];\r\n\t\t\tvar container = dt.table().container();\r\n\r\n\t\t\t// Ignore clicks inside a sub-table\r\n\t\t\tif ($(e.target).closest('div.dt-container')[0] != container) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cell = dt.cell($(e.target).closest('td, th'));\r\n\r\n\t\t\t// Check the cell actually belongs to the host DataTable (so child\r\n\t\t\t// rows, etc, are ignored)\r\n\t\t\tif (!cell.any()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar event = $.Event('user-select.dt');\r\n\t\t\teventTrigger(dt, event, [items, cell, e]);\r\n\r\n\t\t\tif (event.isDefaultPrevented()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cellIndex = cell.index();\r\n\t\t\tif (items === 'row') {\r\n\t\t\t\tidx = cellIndex.row;\r\n\t\t\t\ttypeSelect(e, dt, ctx, 'row', idx);\r\n\t\t\t}\r\n\t\t\telse if (items === 'column') {\r\n\t\t\t\tidx = cell.index().column;\r\n\t\t\t\ttypeSelect(e, dt, ctx, 'column', idx);\r\n\t\t\t}\r\n\t\t\telse if (items === 'cell') {\r\n\t\t\t\tidx = cell.index();\r\n\t\t\t\ttypeSelect(e, dt, ctx, 'cell', idx);\r\n\t\t\t}\r\n\r\n\t\t\tctx._select_lastCell = cellIndex;\r\n\t\t});\r\n\r\n\t// Blurable\r\n\t$('body').on('click.dtSelect' + _safeId(dt.table().node()), function (e) {\r\n\t\tif (ctx._select.blurable) {\r\n\t\t\t// If the click was inside the DataTables container, don't blur\r\n\t\t\tif ($(e.target).parents().filter(dt.table().container()).length) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Ignore elements which have been removed from the DOM (i.e. paging\r\n\t\t\t// buttons)\r\n\t\t\tif ($(e.target).parents('html').length === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Don't blur in Editor form\r\n\t\t\tif ($(e.target).parents('div.DTE').length) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar event = $.Event('select-blur.dt');\r\n\t\t\teventTrigger(dt, event, [e.target, e]);\r\n\r\n\t\t\tif (event.isDefaultPrevented()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tclear(ctx, true);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Trigger an event on a DataTable\r\n *\r\n * @param {DataTable.Api} api      DataTable to trigger events on\r\n * @param  {boolean}      selected true if selected, false if deselected\r\n * @param  {string}       type     Item type acting on\r\n * @param  {boolean}      any      Require that there are values before\r\n *     triggering\r\n * @private\r\n */\r\nfunction eventTrigger(api, type, args, any) {\r\n\tif (any && !api.flatten().length) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (typeof type === 'string') {\r\n\t\ttype = type + '.dt';\r\n\t}\r\n\r\n\targs.unshift(api);\r\n\r\n\t$(api.table().node()).trigger(type, args);\r\n}\r\n\r\n/**\r\n * Update the information element of the DataTable showing information about the\r\n * items selected. This is done by adding tags to the existing text\r\n *\r\n * @param {DataTable.Api} api DataTable to update\r\n * @private\r\n */\r\nfunction info(api, node) {\r\n\tif (api.select.style() === 'api' || api.select.info() === false) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar rows = api.rows({ selected: true }).flatten().length;\r\n\tvar columns = api.columns({ selected: true }).flatten().length;\r\n\tvar cells = api.cells({ selected: true }).flatten().length;\r\n\r\n\tvar add = function (el, name, num) {\r\n\t\tel.append(\r\n\t\t\t$('<span class=\"select-item\"/>').append(\r\n\t\t\t\tapi.i18n(\r\n\t\t\t\t\t'select.' + name + 's',\r\n\t\t\t\t\t{ _: '%d ' + name + 's selected', 0: '', 1: '1 ' + name + ' selected' },\r\n\t\t\t\t\tnum\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t};\r\n\r\n\tvar el = $(node);\r\n\tvar output = $('<span class=\"select-info\"/>');\r\n\r\n\tadd(output, 'row', rows);\r\n\tadd(output, 'column', columns);\r\n\tadd(output, 'cell', cells);\r\n\r\n\tvar existing = el.children('span.select-info');\r\n\r\n\tif (existing.length) {\r\n\t\texisting.remove();\r\n\t}\r\n\r\n\tif (output.text() !== '') {\r\n\t\tel.append(output);\r\n\t}\r\n}\r\n\r\n/**\r\n * Add a checkbox to the header for checkbox columns, allowing all rows to\r\n * be selected, deselected or just to show the state.\r\n *\r\n * @param {*} dt API\r\n * @param {*} headerCheckbox the header checkbox option\r\n */\r\nfunction initCheckboxHeader( dt, headerCheckbox ) {\r\n\t// Find any checkbox column(s)\r\n\tdt.columns('.dt-select').every(function () {\r\n\t\tvar header = this.header();\r\n\r\n\t\tif (! $('input', header).length) {\r\n\t\t\t// If no checkbox yet, insert one\r\n\t\t\tvar input = $('<input>')\r\n\t\t\t\t.attr({\r\n\t\t\t\t\tclass: checkboxClass(true),\r\n\t\t\t\t\ttype: 'checkbox',\r\n\t\t\t\t\t'aria-label': dt.i18n('select.aria.headerCheckbox') || 'Select all rows'\r\n\t\t\t\t})\r\n\t\t\t\t.appendTo(header)\r\n\t\t\t\t.on('change', function () {\r\n\t\t\t\t\tif (this.checked) {\r\n\t\t\t\t\t\tif (headerCheckbox == 'select-page') {\r\n\t\t\t\t\t\t\tdt.rows({page: 'current'}).select()\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdt.rows({search: 'applied'}).select();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdt.rows({selected: true}).deselect();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on('click', function (e) {\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t});\r\n\t\r\n\t\t\t// Update the header checkbox's state when the selection in the\r\n\t\t\t// table changes\r\n\t\t\tdt.on('draw select deselect', function (e, pass, type) {\r\n\t\t\t\tif (type === 'row' || ! type) {\r\n\t\t\t\t\tvar count = dt.rows({selected: true}).count();\r\n\t\t\t\t\tvar search = dt.rows({search: 'applied', selected: true}).count();\r\n\t\t\t\t\tvar available = headerCheckbox == 'select-page' ? dt.rows({page: 'current'}).count() : dt.rows({search: 'applied'}).count();\r\n\r\n\t\t\t\t\tif (search && search <= count && search === available) {\r\n\t\t\t\t\t\tinput\r\n\t\t\t\t\t\t\t.prop('checked', true)\r\n\t\t\t\t\t\t\t.prop('indeterminate', false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (search === 0 && count === 0) {\r\n\t\t\t\t\t\tinput\r\n\t\t\t\t\t\t\t.prop('checked', false)\r\n\t\t\t\t\t\t\t.prop('indeterminate', false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinput\r\n\t\t\t\t\t\t\t.prop('checked', false)\r\n\t\t\t\t\t\t\t.prop('indeterminate', true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Initialisation of a new table. Attach event handlers and callbacks to allow\r\n * Select to operate correctly.\r\n *\r\n * This will occur _after_ the initial DataTables initialisation, although\r\n * before Ajax data is rendered, if there is ajax data\r\n *\r\n * @param  {DataTable.settings} ctx Settings object to operate on\r\n * @private\r\n */\r\nfunction init(ctx) {\r\n\tvar api = new DataTable.Api(ctx);\r\n\tctx._select_init = true;\r\n\r\n\t// Row callback so that classes can be added to rows and cells if the item\r\n\t// was selected before the element was created. This will happen with the\r\n\t// `deferRender` option enabled.\r\n\t//\r\n\t// This method of attaching to `aoRowCreatedCallback` is a hack until\r\n\t// DataTables has proper events for row manipulation If you are reviewing\r\n\t// this code to create your own plug-ins, please do not do this!\r\n\tctx.aoRowCreatedCallback.push(function (row, data, index) {\r\n\t\t\tvar i, ien;\r\n\t\t\tvar d = ctx.aoData[index];\r\n\r\n\t\t\t// Row\r\n\t\t\tif (d._select_selected) {\r\n\t\t\t\t$(row)\r\n\t\t\t\t\t.addClass(ctx._select.className)\r\n\t\t\t\t\t.find('input.' + checkboxClass(true)).prop('checked', true);\r\n\t\t\t}\r\n\r\n\t\t\t// Cells and columns - if separated out, we would need to do two\r\n\t\t\t// loops, so it makes sense to combine them into a single one\r\n\t\t\tfor (i = 0, ien = ctx.aoColumns.length; i < ien; i++) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tctx.aoColumns[i]._select_selected ||\r\n\t\t\t\t\t(d._selected_cells && d._selected_cells[i])\r\n\t\t\t\t) {\r\n\t\t\t\t\t$(d.anCells[i]).addClass(ctx._select.className)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\r\n\t// On Ajax reload we want to reselect all rows which are currently selected,\r\n\t// if there is an rowId (i.e. a unique value to identify each row with)\r\n\tapi.on('preXhr.dt.dtSelect', function (e, settings) {\r\n\t\tif (settings !== api.settings()[0]) {\r\n\t\t\t// Not triggered by our DataTable!\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// note that column selection doesn't need to be cached and then\r\n\t\t// reselected, as they are already selected\r\n\t\tvar rows = api\r\n\t\t\t.rows({ selected: true })\r\n\t\t\t.ids(true)\r\n\t\t\t.filter(function (d) {\r\n\t\t\t\treturn d !== undefined;\r\n\t\t\t});\r\n\r\n\t\tvar cells = api\r\n\t\t\t.cells({ selected: true })\r\n\t\t\t.eq(0)\r\n\t\t\t.map(function (cellIdx) {\r\n\t\t\t\tvar id = api.row(cellIdx.row).id(true);\r\n\t\t\t\treturn id ? { row: id, column: cellIdx.column } : undefined;\r\n\t\t\t})\r\n\t\t\t.filter(function (d) {\r\n\t\t\t\treturn d !== undefined;\r\n\t\t\t});\r\n\r\n\t\t// On the next draw, reselect the currently selected items\r\n\t\tapi.one('draw.dt.dtSelect', function () {\r\n\t\t\tapi.rows(rows).select();\r\n\r\n\t\t\t// `cells` is not a cell index selector, so it needs a loop\r\n\t\t\tif (cells.any()) {\r\n\t\t\t\tcells.each(function (id) {\r\n\t\t\t\t\tapi.cells(id.row, id.column).select();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\t// Update the table information element with selected item summary\r\n\tapi.on('info.dt', function (e, ctx, node) {\r\n\t\t// Store the info node for updating on select / deselect\r\n\t\tif (!ctx._select.infoEls.includes(node)) {\r\n\t\t\tctx._select.infoEls.push(node);\r\n\t\t}\r\n\r\n\t\tinfo(api, node);\r\n\t});\r\n\r\n\tapi.on('select.dtSelect.dt deselect.dtSelect.dt', function () {\r\n\t\tctx._select.infoEls.forEach(function (el) {\r\n\t\t\tinfo(api, el);\r\n\t\t});\r\n\r\n\t\tapi.state.save();\r\n\t});\r\n\r\n\t// Clean up and release\r\n\tapi.on('destroy.dtSelect', function () {\r\n\t\t// Remove class directly rather than calling deselect - which would trigger events\r\n\t\t$(api.rows({ selected: true }).nodes()).removeClass(api.settings()[0]._select.className);\r\n\r\n\t\tdisableMouseSelection(api);\r\n\t\tapi.off('.dtSelect');\r\n\t\t$('body').off('.dtSelect' + _safeId(api.table().node()));\r\n\t});\r\n}\r\n\r\n/**\r\n * Add one or more items (rows or columns) to the selection when shift clicking\r\n * in OS selection style\r\n *\r\n * @param  {DataTable.Api} dt   DataTable\r\n * @param  {string}        type Row or column range selector\r\n * @param  {object}        idx  Item index to select to\r\n * @param  {object}        last Item index to select from\r\n * @private\r\n */\r\nfunction rowColumnRange(dt, type, idx, last) {\r\n\t// Add a range of rows from the last selected row to this one\r\n\tvar indexes = dt[type + 's']({ search: 'applied' }).indexes();\r\n\tvar idx1 = indexes.indexOf(last);\r\n\tvar idx2 = indexes.indexOf(idx);\r\n\r\n\tif (!dt[type + 's']({ selected: true }).any() && idx1 === -1) {\r\n\t\t// select from top to here - slightly odd, but both Windows and Mac OS\r\n\t\t// do this\r\n\t\tindexes.splice(indexes.indexOf(idx) + 1, indexes.length);\r\n\t}\r\n\telse {\r\n\t\t// reverse so we can shift click 'up' as well as down\r\n\t\tif (idx1 > idx2) {\r\n\t\t\tvar tmp = idx2;\r\n\t\t\tidx2 = idx1;\r\n\t\t\tidx1 = tmp;\r\n\t\t}\r\n\r\n\t\tindexes.splice(idx2 + 1, indexes.length);\r\n\t\tindexes.splice(0, idx1);\r\n\t}\r\n\r\n\tif (!dt[type](idx, { selected: true }).any()) {\r\n\t\t// Select range\r\n\t\tdt[type + 's'](indexes).select();\r\n\t}\r\n\telse {\r\n\t\t// Deselect range - need to keep the clicked on row selected\r\n\t\tindexes.splice(indexes.indexOf(idx), 1);\r\n\t\tdt[type + 's'](indexes).deselect();\r\n\t}\r\n}\r\n\r\n/**\r\n * Clear all selected items\r\n *\r\n * @param  {DataTable.settings} ctx Settings object of the host DataTable\r\n * @param  {boolean} [force=false] Force the de-selection to happen, regardless\r\n *     of selection style\r\n * @private\r\n */\r\nfunction clear(ctx, force) {\r\n\tif (force || ctx._select.style === 'single') {\r\n\t\tvar api = new DataTable.Api(ctx);\r\n\r\n\t\tapi.rows({ selected: true }).deselect();\r\n\t\tapi.columns({ selected: true }).deselect();\r\n\t\tapi.cells({ selected: true }).deselect();\r\n\t}\r\n}\r\n\r\n/**\r\n * Select items based on the current configuration for style and items.\r\n *\r\n * @param  {object}             e    Mouse event object\r\n * @param  {DataTables.Api}     dt   DataTable\r\n * @param  {DataTable.settings} ctx  Settings object of the host DataTable\r\n * @param  {string}             type Items to select\r\n * @param  {int|object}         idx  Index of the item to select\r\n * @private\r\n */\r\nfunction typeSelect(e, dt, ctx, type, idx) {\r\n\tvar style = dt.select.style();\r\n\tvar toggleable = dt.select.toggleable();\r\n\tvar isSelected = dt[type](idx, { selected: true }).any();\r\n\r\n\tif (isSelected && !toggleable) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (style === 'os') {\r\n\t\tif (e.ctrlKey || e.metaKey) {\r\n\t\t\t// Add or remove from the selection\r\n\t\t\tdt[type](idx).select(!isSelected);\r\n\t\t}\r\n\t\telse if (e.shiftKey) {\r\n\t\t\tif (type === 'cell') {\r\n\t\t\t\tcellRange(dt, idx, ctx._select_lastCell || null);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trowColumnRange(\r\n\t\t\t\t\tdt,\r\n\t\t\t\t\ttype,\r\n\t\t\t\t\tidx,\r\n\t\t\t\t\tctx._select_lastCell ? ctx._select_lastCell[type] : null\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// No cmd or shift click - deselect if selected, or select\r\n\t\t\t// this row only\r\n\t\t\tvar selected = dt[type + 's']({ selected: true });\r\n\r\n\t\t\tif (isSelected && selected.flatten().length === 1) {\r\n\t\t\t\tdt[type](idx).deselect();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselected.deselect();\r\n\t\t\t\tdt[type](idx).select();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (style == 'multi+shift') {\r\n\t\tif (e.shiftKey) {\r\n\t\t\tif (type === 'cell') {\r\n\t\t\t\tcellRange(dt, idx, ctx._select_lastCell || null);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trowColumnRange(\r\n\t\t\t\t\tdt,\r\n\t\t\t\t\ttype,\r\n\t\t\t\t\tidx,\r\n\t\t\t\t\tctx._select_lastCell ? ctx._select_lastCell[type] : null\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdt[type](idx).select(!isSelected);\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tdt[type](idx).select(!isSelected);\r\n\t}\r\n}\r\n\r\nfunction _safeId(node) {\r\n\treturn node.id.replace(/[^a-zA-Z0-9\\-\\_]/g, '-');\r\n}\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * DataTables selectors\r\n */\r\n\r\n// row and column are basically identical just assigned to different properties\r\n// and checking a different array, so we can dynamically create the functions to\r\n// reduce the code size\r\n$.each(\r\n\t[\r\n\t\t{ type: 'row', prop: 'aoData' },\r\n\t\t{ type: 'column', prop: 'aoColumns' }\r\n\t],\r\n\tfunction (i, o) {\r\n\t\tDataTable.ext.selector[o.type].push(function (settings, opts, indexes) {\r\n\t\t\tvar selected = opts.selected;\r\n\t\t\tvar data;\r\n\t\t\tvar out = [];\r\n\r\n\t\t\tif (selected !== true && selected !== false) {\r\n\t\t\t\treturn indexes;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0, ien = indexes.length; i < ien; i++) {\r\n\t\t\t\tdata = settings[o.prop][indexes[i]];\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tdata && (\r\n\t\t\t\t\t\t(selected === true && data._select_selected === true) ||\r\n\t\t\t\t\t\t(selected === false && !data._select_selected)\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tout.push(indexes[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn out;\r\n\t\t});\r\n\t}\r\n);\r\n\r\nDataTable.ext.selector.cell.push(function (settings, opts, cells) {\r\n\tvar selected = opts.selected;\r\n\tvar rowData;\r\n\tvar out = [];\r\n\r\n\tif (selected === undefined) {\r\n\t\treturn cells;\r\n\t}\r\n\r\n\tfor (var i = 0, ien = cells.length; i < ien; i++) {\r\n\t\trowData = settings.aoData[cells[i].row];\r\n\r\n\t\tif (\r\n\t\t\trowData && (\r\n\t\t\t\t(selected === true &&\r\n\t\t\t\t\trowData._selected_cells &&\r\n\t\t\t\t\trowData._selected_cells[cells[i].column] === true) ||\r\n\t\t\t\t(selected === false &&\r\n\t\t\t\t\t(!rowData._selected_cells || !rowData._selected_cells[cells[i].column]))\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tout.push(cells[i]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n});\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * DataTables API\r\n *\r\n * For complete documentation, please refer to the docs/api directory or the\r\n * DataTables site\r\n */\r\n\r\n// Local variables to improve compression\r\nvar apiRegister = DataTable.Api.register;\r\nvar apiRegisterPlural = DataTable.Api.registerPlural;\r\n\r\napiRegister('select()', function () {\r\n\treturn this.iterator('table', function (ctx) {\r\n\t\tDataTable.select.init(new DataTable.Api(ctx));\r\n\t});\r\n});\r\n\r\napiRegister('select.blurable()', function (flag) {\r\n\tif (flag === undefined) {\r\n\t\treturn this.context[0]._select.blurable;\r\n\t}\r\n\r\n\treturn this.iterator('table', function (ctx) {\r\n\t\tctx._select.blurable = flag;\r\n\t});\r\n});\r\n\r\napiRegister('select.toggleable()', function (flag) {\r\n\tif (flag === undefined) {\r\n\t\treturn this.context[0]._select.toggleable;\r\n\t}\r\n\r\n\treturn this.iterator('table', function (ctx) {\r\n\t\tctx._select.toggleable = flag;\r\n\t});\r\n});\r\n\r\napiRegister('select.info()', function (flag) {\r\n\tif (flag === undefined) {\r\n\t\treturn this.context[0]._select.info;\r\n\t}\r\n\r\n\treturn this.iterator('table', function (ctx) {\r\n\t\tctx._select.info = flag;\r\n\t});\r\n});\r\n\r\napiRegister('select.items()', function (items) {\r\n\tif (items === undefined) {\r\n\t\treturn this.context[0]._select.items;\r\n\t}\r\n\r\n\treturn this.iterator('table', function (ctx) {\r\n\t\tctx._select.items = items;\r\n\r\n\t\teventTrigger(new DataTable.Api(ctx), 'selectItems', [items]);\r\n\t});\r\n});\r\n\r\n// Takes effect from the _next_ selection. None disables future selection, but\r\n// does not clear the current selection. Use the `deselect` methods for that\r\napiRegister('select.style()', function (style) {\r\n\tif (style === undefined) {\r\n\t\treturn this.context[0]._select.style;\r\n\t}\r\n\r\n\treturn this.iterator('table', function (ctx) {\r\n\t\tif (!ctx._select) {\r\n\t\t\tDataTable.select.init(new DataTable.Api(ctx));\r\n\t\t}\r\n\r\n\t\tif (!ctx._select_init) {\r\n\t\t\tinit(ctx);\r\n\t\t}\r\n\r\n\t\tctx._select.style = style;\r\n\r\n\t\t// Add / remove mouse event handlers. They aren't required when only\r\n\t\t// API selection is available\r\n\t\tvar dt = new DataTable.Api(ctx);\r\n\t\tdisableMouseSelection(dt);\r\n\r\n\t\tif (style !== 'api') {\r\n\t\t\tenableMouseSelection(dt);\r\n\t\t}\r\n\r\n\t\teventTrigger(new DataTable.Api(ctx), 'selectStyle', [style]);\r\n\t});\r\n});\r\n\r\napiRegister('select.selector()', function (selector) {\r\n\tif (selector === undefined) {\r\n\t\treturn this.context[0]._select.selector;\r\n\t}\r\n\r\n\treturn this.iterator('table', function (ctx) {\r\n\t\tdisableMouseSelection(new DataTable.Api(ctx));\r\n\r\n\t\tctx._select.selector = selector;\r\n\r\n\t\tif (ctx._select.style !== 'api') {\r\n\t\t\tenableMouseSelection(new DataTable.Api(ctx));\r\n\t\t}\r\n\t});\r\n});\r\n\r\napiRegister('select.last()', function (set) {\r\n\tlet ctx = this.context[0];\r\n\r\n\tif (set) {\r\n\t\tctx._select_lastCell = set;\r\n\t\treturn this;\r\n\t}\r\n\r\n\treturn ctx._select_lastCell;\r\n});\r\n\r\napiRegisterPlural('rows().select()', 'row().select()', function (select) {\r\n\tvar api = this;\r\n\r\n\tif (select === false) {\r\n\t\treturn this.deselect();\r\n\t}\r\n\r\n\tthis.iterator('row', function (ctx, idx) {\r\n\t\tclear(ctx);\r\n\r\n\t\t// There is a good amount of knowledge of DataTables internals in\r\n\t\t// this function. It _could_ be done without that, but it would hurt\r\n\t\t// performance (or DT would need new APIs for this work)\r\n\t\tvar dtData = ctx.aoData[idx];\r\n\t\tvar dtColumns = ctx.aoColumns;\r\n\r\n\t\t$(dtData.nTr).addClass(ctx._select.className);\r\n\t\tdtData._select_selected = true;\r\n\r\n\t\tfor (var i=0 ; i<dtColumns.length ; i++) {\r\n\t\t\tvar col = dtColumns[i];\r\n\r\n\t\t\t// Regenerate the column type if not present\r\n\t\t\tif (col.sType === null) {\r\n\t\t\t\tapi.columns().types()\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (col.sType === 'select-checkbox') {\r\n\t\t\t\tvar cells = dtData.anCells;\r\n\r\n\t\t\t\t// Make sure the checkbox shows the right state\r\n\t\t\t\tif (cells && cells[i]) {\r\n\t\t\t\t\t$('input.' + checkboxClass(true), cells[i]).prop('checked', true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Invalidate the sort data for this column, if not already done\r\n\t\t\t\tif (dtData._aSortData !== null) {\r\n\t\t\t\t\tdtData._aSortData[i] = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tthis.iterator('table', function (ctx, i) {\r\n\t\teventTrigger(api, 'select', ['row', api[i]], true);\r\n\t});\r\n\r\n\treturn this;\r\n});\r\n\r\napiRegister('row().selected()', function () {\r\n\tvar ctx = this.context[0];\r\n\r\n\tif (ctx && this.length && ctx.aoData[this[0]] && ctx.aoData[this[0]]._select_selected) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n});\r\n\r\napiRegisterPlural('columns().select()', 'column().select()', function (select) {\r\n\tvar api = this;\r\n\r\n\tif (select === false) {\r\n\t\treturn this.deselect();\r\n\t}\r\n\r\n\tthis.iterator('column', function (ctx, idx) {\r\n\t\tclear(ctx);\r\n\r\n\t\tctx.aoColumns[idx]._select_selected = true;\r\n\r\n\t\tvar column = new DataTable.Api(ctx).column(idx);\r\n\r\n\t\t$(column.header()).addClass(ctx._select.className);\r\n\t\t$(column.footer()).addClass(ctx._select.className);\r\n\r\n\t\tcolumn.nodes().to$().addClass(ctx._select.className);\r\n\t});\r\n\r\n\tthis.iterator('table', function (ctx, i) {\r\n\t\teventTrigger(api, 'select', ['column', api[i]], true);\r\n\t});\r\n\r\n\treturn this;\r\n});\r\n\r\napiRegister('column().selected()', function () {\r\n\tvar ctx = this.context[0];\r\n\r\n\tif (ctx && this.length && ctx.aoColumns[this[0]] && ctx.aoColumns[this[0]]._select_selected) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n});\r\n\r\napiRegisterPlural('cells().select()', 'cell().select()', function (select) {\r\n\tvar api = this;\r\n\r\n\tif (select === false) {\r\n\t\treturn this.deselect();\r\n\t}\r\n\r\n\tthis.iterator('cell', function (ctx, rowIdx, colIdx) {\r\n\t\tclear(ctx);\r\n\r\n\t\tvar data = ctx.aoData[rowIdx];\r\n\r\n\t\tif (data._selected_cells === undefined) {\r\n\t\t\tdata._selected_cells = [];\r\n\t\t}\r\n\r\n\t\tdata._selected_cells[colIdx] = true;\r\n\r\n\t\tif (data.anCells) {\r\n\t\t\t$(data.anCells[colIdx]).addClass(ctx._select.className);\r\n\t\t}\r\n\t});\r\n\r\n\tthis.iterator('table', function (ctx, i) {\r\n\t\teventTrigger(api, 'select', ['cell', api.cells(api[i]).indexes().toArray()], true);\r\n\t});\r\n\r\n\treturn this;\r\n});\r\n\r\napiRegister('cell().selected()', function () {\r\n\tvar ctx = this.context[0];\r\n\r\n\tif (ctx && this.length) {\r\n\t\tvar row = ctx.aoData[this[0][0].row];\r\n\r\n\t\tif (row && row._selected_cells && row._selected_cells[this[0][0].column]) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n});\r\n\r\napiRegisterPlural('rows().deselect()', 'row().deselect()', function () {\r\n\tvar api = this;\r\n\r\n\tthis.iterator('row', function (ctx, idx) {\r\n\t\t// Like the select action, this has a lot of knowledge about DT internally\r\n\t\tvar dtData = ctx.aoData[idx];\r\n\t\tvar dtColumns = ctx.aoColumns;\r\n\r\n\t\t$(dtData.nTr).removeClass(ctx._select.className);\r\n\t\tdtData._select_selected = false;\r\n\t\tctx._select_lastCell = null;\r\n\r\n\t\tfor (var i=0 ; i<dtColumns.length ; i++) {\r\n\t\t\tvar col = dtColumns[i];\r\n\r\n\t\t\t// Regenerate the column type if not present\r\n\t\t\tif (col.sType === null) {\r\n\t\t\t\tapi.columns().types()\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (col.sType === 'select-checkbox') {\r\n\t\t\t\tvar cells = dtData.anCells;\r\n\r\n\t\t\t\t// Make sure the checkbox shows the right state\r\n\t\t\t\tif (cells && cells[i]) {\r\n\t\t\t\t\t$('input.' + checkboxClass(true), dtData.anCells[i]).prop('checked', false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Invalidate the sort data for this column, if not already done\r\n\t\t\t\tif (dtData._aSortData !== null) {\r\n\t\t\t\t\tdtData._aSortData[i] = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tthis.iterator('table', function (ctx, i) {\r\n\t\teventTrigger(api, 'deselect', ['row', api[i]], true);\r\n\t});\r\n\r\n\treturn this;\r\n});\r\n\r\napiRegisterPlural('columns().deselect()', 'column().deselect()', function () {\r\n\tvar api = this;\r\n\r\n\tthis.iterator('column', function (ctx, idx) {\r\n\t\tctx.aoColumns[idx]._select_selected = false;\r\n\r\n\t\tvar api = new DataTable.Api(ctx);\r\n\t\tvar column = api.column(idx);\r\n\r\n\t\t$(column.header()).removeClass(ctx._select.className);\r\n\t\t$(column.footer()).removeClass(ctx._select.className);\r\n\r\n\t\t// Need to loop over each cell, rather than just using\r\n\t\t// `column().nodes()` as cells which are individually selected should\r\n\t\t// not have the `selected` class removed from them\r\n\t\tapi.cells(null, idx)\r\n\t\t\t.indexes()\r\n\t\t\t.each(function (cellIdx) {\r\n\t\t\t\tvar data = ctx.aoData[cellIdx.row];\r\n\t\t\t\tvar cellSelected = data._selected_cells;\r\n\r\n\t\t\t\tif (data.anCells && (!cellSelected || !cellSelected[cellIdx.column])) {\r\n\t\t\t\t\t$(data.anCells[cellIdx.column]).removeClass(ctx._select.className);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t});\r\n\r\n\tthis.iterator('table', function (ctx, i) {\r\n\t\teventTrigger(api, 'deselect', ['column', api[i]], true);\r\n\t});\r\n\r\n\treturn this;\r\n});\r\n\r\napiRegisterPlural('cells().deselect()', 'cell().deselect()', function () {\r\n\tvar api = this;\r\n\r\n\tthis.iterator('cell', function (ctx, rowIdx, colIdx) {\r\n\t\tvar data = ctx.aoData[rowIdx];\r\n\r\n\t\tif (data._selected_cells !== undefined) {\r\n\t\t\tdata._selected_cells[colIdx] = false;\r\n\t\t}\r\n\r\n\t\t// Remove class only if the cells exist, and the cell is not column\r\n\t\t// selected, in which case the class should remain (since it is selected\r\n\t\t// in the column)\r\n\t\tif (data.anCells && !ctx.aoColumns[colIdx]._select_selected) {\r\n\t\t\t$(data.anCells[colIdx]).removeClass(ctx._select.className);\r\n\t\t}\r\n\t});\r\n\r\n\tthis.iterator('table', function (ctx, i) {\r\n\t\teventTrigger(api, 'deselect', ['cell', api[i]], true);\r\n\t});\r\n\r\n\treturn this;\r\n});\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Buttons\r\n */\r\nfunction i18n(label, def) {\r\n\treturn function (dt) {\r\n\t\treturn dt.i18n('buttons.' + label, def);\r\n\t};\r\n}\r\n\r\n// Common events with suitable namespaces\r\nfunction namespacedEvents(config) {\r\n\tvar unique = config._eventNamespace;\r\n\r\n\treturn 'draw.dt.DT' + unique + ' select.dt.DT' + unique + ' deselect.dt.DT' + unique;\r\n}\r\n\r\nfunction enabled(dt, config) {\r\n\tif (config.limitTo.indexOf('rows') !== -1 && dt.rows({ selected: true }).any()) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (config.limitTo.indexOf('columns') !== -1 && dt.columns({ selected: true }).any()) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (config.limitTo.indexOf('cells') !== -1 && dt.cells({ selected: true }).any()) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\nvar _buttonNamespace = 0;\r\n\r\n$.extend(DataTable.ext.buttons, {\r\n\tselected: {\r\n\t\ttext: i18n('selected', 'Selected'),\r\n\t\tclassName: 'buttons-selected',\r\n\t\tlimitTo: ['rows', 'columns', 'cells'],\r\n\t\tinit: function (dt, node, config) {\r\n\t\t\tvar that = this;\r\n\t\t\tconfig._eventNamespace = '.select' + _buttonNamespace++;\r\n\r\n\t\t\t// .DT namespace listeners are removed by DataTables automatically\r\n\t\t\t// on table destroy\r\n\t\t\tdt.on(namespacedEvents(config), function () {\r\n\t\t\t\tthat.enable(enabled(dt, config));\r\n\t\t\t});\r\n\r\n\t\t\tthis.disable();\r\n\t\t},\r\n\t\tdestroy: function (dt, node, config) {\r\n\t\t\tdt.off(config._eventNamespace);\r\n\t\t}\r\n\t},\r\n\tselectedSingle: {\r\n\t\ttext: i18n('selectedSingle', 'Selected single'),\r\n\t\tclassName: 'buttons-selected-single',\r\n\t\tinit: function (dt, node, config) {\r\n\t\t\tvar that = this;\r\n\t\t\tconfig._eventNamespace = '.select' + _buttonNamespace++;\r\n\r\n\t\t\tdt.on(namespacedEvents(config), function () {\r\n\t\t\t\tvar count =\r\n\t\t\t\t\tdt.rows({ selected: true }).flatten().length +\r\n\t\t\t\t\tdt.columns({ selected: true }).flatten().length +\r\n\t\t\t\t\tdt.cells({ selected: true }).flatten().length;\r\n\r\n\t\t\t\tthat.enable(count === 1);\r\n\t\t\t});\r\n\r\n\t\t\tthis.disable();\r\n\t\t},\r\n\t\tdestroy: function (dt, node, config) {\r\n\t\t\tdt.off(config._eventNamespace);\r\n\t\t}\r\n\t},\r\n\tselectAll: {\r\n\t\ttext: i18n('selectAll', 'Select all'),\r\n\t\tclassName: 'buttons-select-all',\r\n\t\taction: function (e, dt, node, config) {\r\n\t\t\tvar items = this.select.items();\r\n\t\t\tvar mod = config.selectorModifier;\r\n\t\t\t\r\n\t\t\tif (mod) {\r\n\t\t\t\tif (typeof mod === 'function') {\r\n\t\t\t\t\tmod = mod.call(dt, e, dt, node, config);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis[items + 's'](mod).select();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis[items + 's']().select();\r\n\t\t\t}\r\n\t\t}\r\n\t\t// selectorModifier can be specified\r\n\t},\r\n\tselectNone: {\r\n\t\ttext: i18n('selectNone', 'Deselect all'),\r\n\t\tclassName: 'buttons-select-none',\r\n\t\taction: function () {\r\n\t\t\tclear(this.settings()[0], true);\r\n\t\t},\r\n\t\tinit: function (dt, node, config) {\r\n\t\t\tvar that = this;\r\n\t\t\tconfig._eventNamespace = '.select' + _buttonNamespace++;\r\n\r\n\t\t\tdt.on(namespacedEvents(config), function () {\r\n\t\t\t\tvar count =\r\n\t\t\t\t\tdt.rows({ selected: true }).flatten().length +\r\n\t\t\t\t\tdt.columns({ selected: true }).flatten().length +\r\n\t\t\t\t\tdt.cells({ selected: true }).flatten().length;\r\n\r\n\t\t\t\tthat.enable(count > 0);\r\n\t\t\t});\r\n\r\n\t\t\tthis.disable();\r\n\t\t},\r\n\t\tdestroy: function (dt, node, config) {\r\n\t\t\tdt.off(config._eventNamespace);\r\n\t\t}\r\n\t},\r\n\tshowSelected: {\r\n\t\ttext: i18n('showSelected', 'Show only selected'),\r\n\t\tclassName: 'buttons-show-selected',\r\n\t\taction: function (e, dt) {\r\n\t\t\tif (dt.search.fixed('dt-select')) {\r\n\t\t\t\t// Remove existing function\r\n\t\t\t\tdt.search.fixed('dt-select', null);\r\n\r\n\t\t\t\tthis.active(false);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Use a fixed filtering function to match on selected rows\r\n\t\t\t\t// This needs to reference the internal aoData since that is\r\n\t\t\t\t// where Select stores its reference for the selected state\r\n\t\t\t\tvar dataSrc = dt.settings()[0].aoData;\r\n\r\n\t\t\t\tdt.search.fixed('dt-select', function (text, data, idx) {\r\n\t\t\t\t\t// _select_selected is set by Select on the data object for the row\r\n\t\t\t\t\treturn dataSrc[idx]._select_selected;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.active(true);\r\n\t\t\t}\r\n\r\n\t\t\tdt.draw();\r\n\t\t}\r\n\t}\r\n});\r\n\r\n$.each(['Row', 'Column', 'Cell'], function (i, item) {\r\n\tvar lc = item.toLowerCase();\r\n\r\n\tDataTable.ext.buttons['select' + item + 's'] = {\r\n\t\ttext: i18n('select' + item + 's', 'Select ' + lc + 's'),\r\n\t\tclassName: 'buttons-select-' + lc + 's',\r\n\t\taction: function () {\r\n\t\t\tthis.select.items(lc);\r\n\t\t},\r\n\t\tinit: function (dt) {\r\n\t\t\tvar that = this;\r\n\r\n\t\t\tdt.on('selectItems.dt.DT', function (e, ctx, items) {\r\n\t\t\t\tthat.active(items === lc);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n});\r\n\r\nDataTable.type('select-checkbox', {\r\n\tclassName: 'dt-select',\r\n\tdetect: function (data) {\r\n\t\t// Rendering function will tell us if it is a checkbox type\r\n\t\treturn data === 'select-checkbox' ? data : false;\r\n\t},\r\n\torder: {\r\n\t\tpre: function (d) {\r\n\t\t\treturn d === 'X' ? -1 : 0;\r\n\t\t}\r\n\t}\r\n});\r\n\r\n$.extend(true, DataTable.defaults.oLanguage, {\r\n\tselect: {\r\n\t\taria: {\r\n\t\t\trowCheckbox: 'Select row'\r\n\t\t}\r\n\t}\r\n});\r\n\r\nDataTable.render.select = function (valueProp, nameProp) {\r\n\tvar valueFn = valueProp ? DataTable.util.get(valueProp) : null;\r\n\tvar nameFn = nameProp ? DataTable.util.get(nameProp) : null;\r\n\r\n\treturn function (data, type, row, meta) {\r\n\t\tvar dtRow = meta.settings.aoData[meta.row];\r\n\t\tvar selected = dtRow._select_selected;\r\n\t\tvar ariaLabel = meta.settings.oLanguage.select.aria.rowCheckbox;\r\n\r\n\t\tif (type === 'display') {\r\n\t\t\treturn $('<input>')\r\n\t\t\t\t.attr({\r\n\t\t\t\t\t'aria-label': ariaLabel,\r\n\t\t\t\t\tclass: checkboxClass(),\r\n\t\t\t\t\tname: nameFn ? nameFn(row) : null,\r\n\t\t\t\t\ttype: 'checkbox',\r\n\t\t\t\t\tvalue: valueFn ? valueFn(row) : null,\r\n\t\t\t\t\tchecked: selected\r\n\t\t\t\t})\r\n\t\t\t\t.on('input', function (e) {\r\n\t\t\t\t\t// Let Select 100% control the state of the checkbox\r\n\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\t// And make sure this checkbox matches it's row as it is possible\r\n\t\t\t\t\t// to check out of sync if this was clicked on to deselect a range\r\n\t\t\t\t\t// but remains selected itself\r\n\t\t\t\t\tthis.checked = $(this).closest('tr').hasClass('selected');\r\n\t\t\t\t})[0];\r\n\t\t}\r\n\t\telse if (type === 'type') {\r\n\t\t\treturn 'select-checkbox';\r\n\t\t}\r\n\t\telse if (type === 'filter') {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\treturn selected ? 'X' : '';\r\n\t}\r\n}\r\n\r\n// Legacy checkbox ordering\r\nDataTable.ext.order['select-checkbox'] = function (settings, col) {\r\n\treturn this.api()\r\n\t\t.column(col, { order: 'index' })\r\n\t\t.nodes()\r\n\t\t.map(function (td) {\r\n\t\t\tif (settings._select.items === 'row') {\r\n\t\t\t\treturn $(td).parent().hasClass(settings._select.className);\r\n\t\t\t}\r\n\t\t\telse if (settings._select.items === 'cell') {\r\n\t\t\t\treturn $(td).hasClass(settings._select.className);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t});\r\n};\r\n\r\n$.fn.DataTable.select = DataTable.select;\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Initialisation\r\n */\r\n\r\n// DataTables creation - check if select has been defined in the options. Note\r\n// this required that the table be in the document! If it isn't then something\r\n// needs to trigger this method unfortunately. The next major release of\r\n// DataTables will rework the events and address this.\r\n$(document).on('preInit.dt.dtSelect', function (e, ctx) {\r\n\tif (e.namespace !== 'dt') {\r\n\t\treturn;\r\n\t}\r\n\r\n\tDataTable.select.init(new DataTable.Api(ctx));\r\n});\r\n\r\n\r\nexport default DataTable;\r\n"],
  "mappings": "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",
  "names": ["jQuery", "init", "info", "indexes", "ctx", "container", "el", "i", "api"]
}
